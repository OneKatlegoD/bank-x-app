package com.bankx.techtest;

import java.util.List;
import java.util.ArrayList;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import java.io.FileReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.Float;
import java.math.BigDecimal;

import com.bankx.techtest.Service.*;
import com.bankx.techtest.Domain.*;
import com.bankx.techtest.Configuration.BankAccountServiceConfiguration;

public class Main {

    public static void main(String[] args)
    {
        String serviceConfigFilePath="";
        BankAccountServiceConfiguration bankAccountServiceConfiguration;
        AccountService bankXAccountService;
        if(args.length == 0)
        {
            System.out.println("Program expects argument for configuration file location ( i.e 'config/config.json')");
            System.exit(1);
        }
        else
        {
            for(String arg: args)
            {
                serviceConfigFilePath = arg;
                break;
            }
            System.out.println("Starting BankXAccountService with configuration located in: "+ serviceConfigFilePath);
            bankAccountServiceConfiguration = loadConfiguration(serviceConfigFilePath);

            if(bankAccountServiceConfiguration == null)
            {
                System.out.println("Failed to load bankX account service configuration. Check config file");
                System.exit(1);
            }
            else
            {
                bankXAccountService = new BankXAccountService();
                bankXAccountService.setSavingsAccountJoiningBonus(bankAccountServiceConfiguration.savingsAccountJoiningBonus);
                bankXAccountService.setSavingsAccountCreditReward(bankAccountServiceConfiguration.savingsAccountCreditReward);
                bankXAccountService.setTransactionalAccountPaymentsFee(bankAccountServiceConfiguration.transactionalAccountPaymentsFee);
                bankXAccountService.setBankZEndOfDayTransactionsFilePath(bankAccountServiceConfiguration.bankZEndOfDayTransactionsFilePath);

                AccountHolder accountHolder = new AccountHolder(11111,"Tom","Jones",
                        "123456789","TestAddress","123456789",
                        "Test@email.com");
                AccountHolder accountHolder1 = new AccountHolder(22222,"Tom","Jones",
                        "123456789","TestAddress","123456789",
                        "Test@email.com");
                AccountHolder accountHolder2 = new AccountHolder(33333,"Tom","Jones",
                        "123456789","TestAddress","123456789",
                        "Test@email.com");
				try
				{
				bankXAccountService.onboardNewCustomer(accountHolder,20000f,30000f,123456l,234345l);
                bankXAccountService.onboardNewCustomer(accountHolder1,20000f,30000f,24680l,88888l);
                bankXAccountService.onboardNewCustomer(accountHolder2,20000f,30000f,65656l,99999l);


                bankXAccountService.doBankZEodTransactions();
				}
				catch(Exception e)
				{
					System.out.println(e.getMessage());
				}
                
            //    presentService(bankXAccountService);
            }


        }



        System.out.println("Yebo");
    }

    public static BankAccountServiceConfiguration loadConfiguration(String configFilePath)
    {
        JSONParser jsonParser = new JSONParser();
        BankAccountServiceConfiguration bankAccountServiceConfiguration = new BankAccountServiceConfiguration();

        try (FileReader reader = new FileReader(configFilePath))
        {
            Object obj = jsonParser.parse(reader);
            JSONObject jsonObject = (JSONObject) obj;

            bankAccountServiceConfiguration.savingsAccountJoiningBonus = Float.valueOf( (String) jsonObject.get("savingsAccountJoiningBonus"));
            bankAccountServiceConfiguration.savingsAccountCreditReward = Float.valueOf( (String) jsonObject.get("savingsAccountCreditReward"));
            bankAccountServiceConfiguration.transactionalAccountPaymentsFee = Float.valueOf( (String) jsonObject.get("transactionalAccountPaymentsFee"));
            bankAccountServiceConfiguration.bankZEndOfDayTransactionsFilePath = (String) jsonObject.get("bankZEndOfDayTransactionsFilePath");

        } catch (FileNotFoundException e) {
            e.printStackTrace();
            return null;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        } catch (ParseException e) {
            e.printStackTrace();
            return null;
        }
        return bankAccountServiceConfiguration;

    }

    public static void presentService(BankXAccountService bankXAccountService)
    {

    }


}